apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
     {{- include "stac-fastapi.labels" . | nindent 6 }}
  name: stac-fastapi-pgstac
spec:
  replicas: {{ .Values.stacFastApi.replicaCount }}
  selector:
    matchLabels:
      {{- include "stac-fastapi.labels" . | nindent 6 }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: stac-fastapi-pgstac
    spec:
    {{ if .Values.pgStac.enabled }}
      serviceAccountName: {{ .Values.stacFastApi.service.serviceAccount }}
      initContainers:
        - name: wait-for-pgstac
          image: ghcr.io/groundnuty/k8s-wait-for:v2.0
          imagePullPolicy: Always
          args:
            - "service"
            - "-lapp={{.Values.pgStac.service.name}}"
    {{ end }}
      containers:
        - env:
            - name: APP_HOST
              value: 0.0.0.0
            - name: DB_MAX_CONN_SIZE
              value: "1"
            - name: DB_MIN_CONN_SIZE
              value: "1"
            - name: ENVIRONMENT
              value: local
            - name: GDAL_DISABLE_READDIR_ON_OPEN
              value: EMPTY_DIR
            - name: GDAL_HTTP_MERGE_CONSECUTIVE_RANGES
              value: "YES"
            - name: POSTGRES_DBNAME
              value: {{.Values.pgStac.dbName}}
            - name: POSTGRES_HOST_READER
              {{ if .Values.pgStac.enabled }}
              value: "{{.Values.pgStac.service.name}}.{{.Release.Namespace}}"
              {{ else }}
              value: {{.Values.pgStac.dbHost}}
              {{ end}}
            - name: POSTGRES_HOST_WRITER
              {{ if .Values.pgStac.enabled }}
              value: "{{.Values.pgStac.service.name}}.{{.Release.Namespace}}"
              {{ else }}
              value: {{.Values.pgStac.dbHost}}
              {{ end}}
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.pgStac.passwordSecret.name }}
                  key: {{ .Values.pgStac.passwordSecret.key }}
            - name: POSTGRES_PORT
              value: "{{ .Values.pgStac.service.port }}"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.pgStac.userNameSecret.name }}
                  key: {{ .Values.pgStac.userNameSecret.key }}
            - name: USE_API_HYDRATE
              value: "FALSE"
            - name: VSI_CACHE
              value: "TRUE"
            - name: WEB_CONCURRENCY
              value: "10"
          image:  "{{ .Values.stacFastApi.image.repository }}:{{ .Values.stacFastApi.image.tag }}"
          name: {{ .Values.stacFastApi.deployment.name }}
          ports:
            - containerPort: {{ .Values.stacFastApi.container.port }}
          resources: {}
      restartPolicy: Always
status: {}
