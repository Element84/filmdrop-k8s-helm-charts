apiVersion: batch/v1
kind: Job
metadata:
  labels:
     {{- include "swoop-db-init.labels" . | nindent 6 }}
  name: "{{ .Values.service.name }}-{{ .Values.postgres.migration.version }}"
spec:
  template:
    metadata:
      name: "{{ .Values.service.name }}-{{ .Values.postgres.migration.version }}"
    spec:
      containers:
      - name: db-init-job
        image:  "{{.Values.postgres.image.repository}}:{{.Values.postgres.image.tag}}"
        command: ["python", "/opt/swoop/db/scripts/db-initialization.py"]
        env:
        - name: PGHOST
          value: {{.Values.postgres.service.dbHost}}
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.dbAdminUsernameSecret.name}}
              key: {{.Values.postgres.service.dbAdminUsernameSecret.key}}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.dbAdminPasswordSecret.name}}
              key: {{.Values.postgres.service.dbAdminPasswordSecret.key}}
        - name: PGPORT
          value: {{.Values.postgres.service.port | quote}}
        - name: PGDATABASE
          value: {{.Values.postgres.service.dbName}}
        - name: API_ROLE_USER
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.apiRoleUsernameSecret.name}}
              key: {{.Values.postgres.service.apiRoleUsernameSecret.key}}
        - name: API_ROLE_PASS
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.apiRolePasswordSecret.name}}
              key: {{.Values.postgres.service.apiRolePasswordSecret.key}}
        - name: CABOOSE_ROLE_USER
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.cabooseRoleUsernameSecret.name}}
              key: {{.Values.postgres.service.cabooseRoleUsernameSecret.key}}
        - name: CABOOSE_ROLE_PASS
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.cabooseRolePasswordSecret.name}}
              key: {{.Values.postgres.service.cabooseRolePasswordSecret.key}}
        - name: CONDUCTOR_ROLE_USER
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.conductorRoleUsernameSecret.name}}
              key: {{.Values.postgres.service.conductorRoleUsernameSecret.key}}
        - name: CONDUCTOR_ROLE_PASS
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.conductorRolePasswordSecret.name}}
              key: {{.Values.postgres.service.conductorRolePasswordSecret.key}}
        - name: OWNER_ROLE_USER
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.ownerRoleUsernameSecret.name}}
              key: {{.Values.postgres.service.ownerRoleUsernameSecret.key}}
        - name: OWNER_ROLE_PASS
          valueFrom:
            secretKeyRef:
              name: {{.Values.postgres.service.ownerRolePasswordSecret.name}}
              key: {{.Values.postgres.service.ownerRolePasswordSecret.key}}
        resources:
          requests:
            cpu: 1
            memory: "200Mi"
      restartPolicy: Never
