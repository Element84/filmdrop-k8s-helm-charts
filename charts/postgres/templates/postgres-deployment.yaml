apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    {{- include "postgres.labels" . | nindent 6 }}
  name: postgres
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgres.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: {{ .Values.service.authMethod }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.passwordSecret.name }}
                  key: {{ .Values.service.passwordSecret.key }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.userNameSecret.name }}
                  key: {{ .Values.service.userNameSecret.key }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.passwordSecret.name }}
                  key: {{ .Values.service.passwordSecret.key }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.userNameSecret.name }}
                  key: {{ .Values.service.userNameSecret.key }}
            - name: POSTGRES_PORT
              value: "{{ .Values.service.port }}"
            - name: PGDATABASE
              value: {{ .Values.service.dbName }}
            - name: PGPORT
              value: "{{ .Values.service.port }}"
            - name: PGAUTHMETHOD
              value: {{ .Values.service.authMethod }}
            - name: PGSSLMODE
              value: {{ .Values.service.sslMode }}
            - name: SWOOP_DB_SCHEMA_VERSION_TABLE
              value: {{ .Values.service.schemaVersionTable }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: {{ .Values.deployment.name }}
          ports:
            - containerPort: {{ .Values.container.port }}
          resources: {}
          volumeMounts:
            - mountPath: /swoop
              name: postgres-claim0
          workingDir: /swoop
      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
status: {}
